{"mappings":"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","sources":["src/js/main.js","src/js/mainCardRender.js","src/js/renderBookCards.js","src/js/categories.js","src/js/categoriesRenderList.js","src/js/categoriesSelect.js","src/js/categoriesSelectBtn.js","src/js/modal-current-link.js","src/js/loader.js"],"sourcesContent":["import { FetchBooks } from './booksApi.js';\nimport renderBookCards from './renderBookCards.js';\n\nconst bookShelf = new FetchBooks;\n\nasync function fetchBook() {\n  try {\n    const response = await bookShelf.fetchTopBooks();\n    renderBookCards(response.data)\n  } catch (error) {\n    console.error(error);\n    // need notiflix or placeholder for errors\n  };\n};\n\nfetchBook()\n\nexport default fetchBook;\n","function cardRender(books, length) {\n  let markup = '';\n  for (let i = 0; i < length; i += 1) {\n    const { _id,book_image ,title, author } = books[i];\n    \n    markup += `\n      <li class=\"item-category-book js-book-modal\" data-book-id=\"${_id}\">\n        <a class=\"link-books-render\" href=\"#\">  \n      <div class=\"card-book\">\n            <div class=\"img-card-book\">\n            <img src=\"${book_image}\" alt=\"book\" class=\"img-book\">\n            </div>\n              <div class=\"box-text-book-best\">\n                <div class=\"box-title\">  \n                  <p class=\"title-book\">${title}</p>\n                </div>\n                  <div class=\"box-author\">  \n                  <p class=\"author-book\">${author}</p>\n                  </div>\n                </div>\n          </div>\n        </a>\n          </li>\n  `\n  };\n  return markup;\n};\n\nexport default cardRender;\n","import renderCard from './mainCardRender.js';\n//\n\nasync function renderCards(data) {\n  // best seller books title\n  const bookShelf = document.querySelector('.books-content');\n  // bookShelf.innerHTML = '<ul class=\"top-books\"></ul>';\n\n  const box = document.querySelector('.top-books');\n  box.innerHTML =\n    '<h2 class=\"main-title\">Best Sellers<span class=\"color-accent\"> Books</span></h2>';\n\n  // ебучие циклы\n  const fragment = document.createDocumentFragment();\n  try {\n    if (window.screen.width < 767.8) {\n      for (let i = 0; i < 4; i += 1) {\n        const length = 1;\n        const { books, list_name } = data[i];\n        const cards = renderCard(books, length);\n        const completeCardsSection = renderCardsWrapper(cards, list_name);\n        box.insertAdjacentHTML('beforeend', completeCardsSection);\n      }\n    } else if (window.screen.width > 767.8 && window.screen.width < 1440) {\n      for (let i = 0; i < 4; i += 1) {\n        const length = 3;\n        const { books, list_name } = data[i];\n        const cards = renderCard(books, length);\n        const completeCardsSection = renderCardsWrapper(cards, list_name);\n        box.insertAdjacentHTML('beforeend', completeCardsSection);\n      }\n    } else if (window.screen.width >= 1440) {\n      for (let i = 0; i < 4; i += 1) {\n        const length = 5;\n        const { books, list_name } = data[i];\n        const cards = renderCard(books, length);\n        const completeCardsSection = renderCardsWrapper(cards, list_name);\n        box.insertAdjacentHTML('beforeend', completeCardsSection);\n      }\n    } else {\n      // console.log('nepravilno');\n      console.error('ops... something went wrong, contact us via email');\n      // notify\n    }\n  } catch (error) {\n    console.log(error);\n    // не забудь нотификс\n  }\n  // const topCat = document.\n}\n\nfunction renderCardsWrapper(cards, list_name) {\n  const markup = `\n  <li>\n  <h3 class=\"item-category\">${list_name}</h3>\n  <ul class=\"box-category\">\n  ${cards}\n  </ul>\n  <button type=\"button\" aria-label=\"Show more\" class=\"see-more\">See more</button>\n  </li>\n  `;\n\n  return markup;\n}\n\nexport default renderCards;\n","import { FetchBooks } from './booksApi.js'\nimport populateGenresList from './categoriesRenderList.js'\nimport onCatSelectBtn from './categoriesSelectBtn.js'\n\n// ========================================================\n\nconst wrapper = document.querySelector('.categories-select-wrapper')\n\n// ========================================================\n\nconst fetchCategory = new FetchBooks\n\nasync function categoriesList() {\n  try {\n    const response = await fetchCategory.fetchCategoryList();\n    await populateGenresList(response.data);\n  } catch (error) {\n    console.error(error);\n    // need notiflix or placeholder for errors\n  }\n}\n\ncategoriesList()\n\nwrapper.addEventListener('click', ev => onCatSelectBtn(ev, fetchCategory));\n\n\n\n\n","const genresListWrapper = document.querySelector('.categories-select-wrapper')\n\n\nfunction populateGenresList(array) {\n  // main ul\n  const ul = document.createElement('ul');\n  ul.classList.add('categories-list');\n  // no filtering btn\n  const allCat = document.createElement('li');\n  const allCatBtn = document.createElement('button');\n  allCatBtn.setAttribute('type', 'button');\n  allCatBtn.setAttribute('id', 'All categories');\n  allCatBtn.classList.add('categories-active', 'categories-list-el');\n  allCatBtn.textContent = 'All categories';\n  allCat.appendChild(allCatBtn)\n  ul.appendChild(allCat);\n  // select genres btn's\n  array.forEach((el, i) => {\n    const listOfItems = document.createElement('li');\n    const item = document.createElement('button');\n    item.setAttribute('type', 'button');\n    item.setAttribute('id', `${array[i].list_name}`);\n    item.classList.add('categories-list-el');\n    item.textContent = `${el.list_name}`;\n    listOfItems.appendChild(item);\n    ul.appendChild(listOfItems);\n  })\n  // populating ul with btn's\n  genresListWrapper.appendChild(ul);\n};\n\n\nexport default populateGenresList\n\n","import cardRender from './mainCardRender.js';\n\nasync function populateByCategories(fetchCategory) {\n  const categories = fetchCategory.category;\n  try {\n    const response = await fetchCategory.fetchCategoryOfBooks().then(\n      response => response.data\n    );\n    if (response.length < 1) {\n      // return МЕСТО ДЛЯ НОТИФИКСА!!!!\n    };\n    const cards = cardRender(response, response.length);\n\n    await renderMain(categories, cards);\n  } catch (error) {\n    console.log(error);\n  };\n};\n\nfunction renderMain(cat, cards) {\n  const catName = findLastWord(cat);\n\n  const box = document.querySelector('.books-content');\n  const title = `<h2 class=\"main-title\">${catName.string} <span class=\"color-accent\">${catName.lastWord}</span></h2>`\n  // const title = document.createElement('h2');\n  // title.classList.add('main-title');\n  // title.insertAdjacentHTML('beforeend',\n  //   ``\n  // );\n  const top = document.querySelector('.top-books');\n  top.innerHTML= `${title}${cards}`;\n  // box.innerHTML = `${title} <ul class=\"top-books\">${cards}</ul>`;\n  // .innerHTML(cards);\n  // console.log(fragment);\n  // box.innerHTML(fragment);\n};\n\n\nfunction findLastWord(cat) {\n  const words = cat.split(' ');\n  if (words.length > 1) {\n    const lastWord = words.pop();\n    const string = words.join(' ');\n\n    return {\n      string: string,\n      lastWord: lastWord,\n    };\n  } else {\n    // Место под нотифликс!!!!!!!!!!!!!!!!!!!\n    return console.log(error);\n  };\n}\n\n\nexport default populateByCategories;","import populateByCategories from './categoriesSelect';\nimport fetchBook from './main';\n\nasync function onCatSelectBtn(click, fetchCategory) {\n  if (click.target.nodeName !== 'BUTTON') {\n    return;\n  };\n  try {\n    if (click.target.id === 'All categories') {\n      fetchBook();\n      const privActiveBtn = document.querySelector('.categories-active');\n      privActiveBtn.classList.remove('categories-active');\n      click.target.classList.add('categories-active');\n      return;\n    };\n  } catch (error) {\n    console.log(error);\n  }\n  const privActiveBtn = document.querySelector('.categories-active');\n  privActiveBtn.classList.remove('categories-active');\n  click.target.classList.add('categories-active');\n  try {\n    // console.log(click.srcElement.id);\n    fetchCategory.category = click.srcElement.id;\n    // console.log(fetchCategory.category);\n    await populateByCategories(fetchCategory);\n  } catch (error) {\n    console.log(error);\n  };\n};\n\n// const all = document.querySelector('#All categories')\n\n// all.addEventListener('click', () =>  fetchBooks())\n\n\n\n\n\n\n\n\nexport default onCatSelectBtn;","function addCurentModalLinkNewClass() {\n    \n    const linkElModal = document.querySelectorAll('.modal-link-nav');\n    let pathModal = window.location.pathname; \n    \n    \n    linkElModal.forEach(function (link) {\n        let linkPathModal = link.getAttribute('href');\n        if (pathModal === linkPathModal) {\n            link.classList.add('current-modal');\n        }\n    })\n}\n\naddCurentModalLinkNewClass();","const loaders = document.querySelectorAll('.loader-container');\nconst categories = document.querySelector('.categories-select-wrapper');\n\nwindow.addEventListener('load', function () {\n  loaders.forEach(loader => {\n    this.setTimeout(() => {\n      loader.style.display = 'none';\n    }, 500);\n  });\n});\n"],"names":["$ju4sA","parcelRequire","$aa012f47f644ff15$export$2e2bcd8739ae039","books","length","markup","i","_id","book_image","title","author","$03caba7a700ff21c$var$renderCardsWrapper","cards","list_name","$03caba7a700ff21c$export$2e2bcd8739ae039","async","data","document","querySelector","box","innerHTML","createDocumentFragment","window","screen","width","completeCardsSection","insertAdjacentHTML","i1","i2","console","error","log","$d706c914d748cb55$var$bookShelf","FetchBooks","$d706c914d748cb55$var$fetchBook","response","fetchTopBooks","$d706c914d748cb55$export$2e2bcd8739ae039","$656843fb62c559d0$var$genresListWrapper","$656843fb62c559d0$export$2e2bcd8739ae039","array","ul","createElement","classList","add","allCat","allCatBtn","setAttribute","textContent","appendChild","forEach","el","listOfItems","item","$8ac15c9f5e1cd71b$export$2e2bcd8739ae039","fetchCategory","categories","category","response1","fetchCategoryOfBooks","then","cat","catName","words","split","lastWord","pop","string","join","$8ac15c9f5e1cd71b$var$findLastWord","$8ac15c9f5e1cd71b$var$renderMain","$94e89ce472e46323$export$2e2bcd8739ae039","click","target","nodeName","id","remove","srcElement","error1","$f3b06000f9b46fbb$var$wrapper","$f3b06000f9b46fbb$var$fetchCategory","fetchCategoryList","$f3b06000f9b46fbb$var$categoriesList","addEventListener","ev","linkElModal","querySelectorAll","pathModal","location","pathname","link","linkPathModal","getAttribute","$bd9c3168d969d845$var$addCurentModalLinkNewClass","$bdfcdc80b4c38739$var$loaders","loader","this","setTimeout","style","display"],"version":3,"file":"index.b93cd7b5.js.map"}